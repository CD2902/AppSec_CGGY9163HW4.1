Part 4. While using burp suite to see each request and added my authorization token to log in to get the user response, I notice one interesting response when testing the request listed in the CardInterface.kt. I was able to see my cards that contain a card I recently purchased by sending a get request, GET https://appsecclass.report/api/cards ) and made it disappear when using PUT https://appsecclass.report/api/use/{card_number}  since its making an update to the server  
Making the request within my browser, capture it with brup suit and change the parameter worked successfully.
So, test this vulnerability, I created account and bought a lot of giftcards. Then I called a put request to a different user to use a card that that was purchase by the first user I created. After initiated the request I logout back to the user and saw the user card was gone.

Fixes: 
Their two fixies that could be implement 

1) whenever buy a card it creates a random number that small and increment. Learned on how syncookies are implement to prevent users to capture the sequence number whecter a Syn, ACK is sent outside. I believe we should hash it the giftcard number into a large number for attackers to have a hard time to iterate number. The Ugly is that thenumber of the giftcard if genereated one. Second options seems alot better.

2) What we need to do in the server side, is to validate that card the user uses is it it his card when the user buys a giftcard. Since we can see the cards from api/cards. the server check the users to see if that card belongs to that users, if not we can reject autorization to use the card.